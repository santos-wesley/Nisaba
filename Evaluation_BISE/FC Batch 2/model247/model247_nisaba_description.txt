#MP-Declare Model
## Activities
- **activity Receive Cargo**: The 'Receive Cargo' activity involves the initial acceptance and registration of cargo upon arrival.
- **activity Inspect Cargo**: The 'Inspect Cargo' activity entails examining the cargo to ensure compliance with regulations and safety standards.
- **activity Document Cargo**: The 'Document Cargo' activity includes recording and maintaining documentation related to the cargo.
- **activity Scan Cargo**: The 'Scan Cargo' activity involves scanning the cargo to determine its weight and other characteristics.
- **activity Clear Cargo**: The 'Clear Cargo' activity represents the process of approving the cargo for further handling or release.
- **activity Hold Cargo**: The 'Hold Cargo' activity involves placing the cargo on hold due to issues or pending inspections.
- **activity Report Findings**: The 'Report Findings' activity includes documenting and reporting any findings from the cargo inspection.
- **activity Notify Authorities**: The 'Notify Authorities' activity involves informing relevant authorities about specific findings or issues related to the cargo.
- **activity Release Cargo**: The 'Release Cargo' activity represents the final approval and release of the cargo for dispatch.
- **activity Archive Documentation**: The 'Archive Documentation' activity involves storing and archiving all documentation related to the cargo.
- **activity Dispatch Cargo**: The 'Dispatch Cargo' activity includes organizing and sending the cargo to its final destination.
- **activity Log Entry**: The 'Log Entry' activity involves recording the initial entry of the cargo into the system.

## Attributes
- **Cargo ID: integer between 1 and 999999**: The attribute 'Cargo ID: integer between 1 and 999999' represents the unique identification number assigned to each cargo.
- **Cargo Weight: float between 0.1 and 10000**: The attribute 'Cargo Weight: float between 0.1 and 10000' represents the weight of the cargo in kilograms.
- **Inspector ID: integer between 1 and 9999**: The attribute 'Inspector ID: integer between 1 and 9999' represents the unique identification number of the inspector responsible for examining the cargo.
- **Inspection Result: Clear, Hold**: The attribute 'Inspection Result: Clear, Hold' specifies the outcome of the cargo inspection, indicating whether the cargo is cleared or held.
- **Prohibited Item Found: Yes, No**: The attribute 'Prohibited Item Found: Yes, No' indicates whether any prohibited items were found during the cargo inspection.
- **Notification Status: Notified, Not Notified**: The attribute 'Notification Status: Notified, Not Notified' represents the status of notifications sent to authorities regarding the cargo.
- **Documentation Status: Completed, Incomplete**: The attribute 'Documentation Status: Completed, Incomplete' specifies whether the documentation for the cargo is complete or incomplete.

## Binds
- **bind Receive Cargo: Cargo ID**: The bind 'Receive Cargo: Cargo ID' specifies that the activity 'Receive Cargo' requires the attribute 'Cargo ID'.
- **bind Inspect Cargo: Cargo ID, Inspector ID, Inspection Result**: The bind 'Inspect Cargo: Cargo ID, Inspector ID, Inspection Result' links the 'Inspect Cargo' activity with the attributes 'Cargo ID', 'Inspector ID', and 'Inspection Result'.
- **bind Document Cargo: Cargo ID, Documentation Status**: The bind 'Document Cargo: Cargo ID, Documentation Status' links the 'Document Cargo' activity with the attributes 'Cargo ID' and 'Documentation Status'.
- **bind Scan Cargo: Cargo ID, Cargo Weight**: The bind 'Scan Cargo: Cargo ID, Cargo Weight' links the 'Scan Cargo' activity with the attributes 'Cargo ID' and 'Cargo Weight'.
- **bind Clear Cargo: Cargo ID**: The bind 'Clear Cargo: Cargo ID' specifies that the activity 'Clear Cargo' requires the attribute 'Cargo ID'.
- **bind Hold Cargo: Cargo ID**: The bind 'Hold Cargo: Cargo ID' specifies that the activity 'Hold Cargo' requires the attribute 'Cargo ID'.
- **bind Report Findings: Cargo ID, Prohibited Item Found**: The bind 'Report Findings: Cargo ID, Prohibited Item Found' links the 'Report Findings' activity with the attributes 'Cargo ID' and 'Prohibited Item Found'.
- **bind Notify Authorities: Cargo ID, Prohibited Item Found, Notification Status**: The bind 'Notify Authorities: Cargo ID, Prohibited Item Found, Notification Status' links the 'Notify Authorities' activity with the attributes 'Cargo ID', 'Prohibited Item Found', and 'Notification Status'.
- **bind Release Cargo: Cargo ID**: The bind 'Release Cargo: Cargo ID' specifies that the activity 'Release Cargo' requires the attribute 'Cargo ID'.
- **bind Archive Documentation: Cargo ID, Documentation Status**: The bind 'Archive Documentation: Cargo ID, Documentation Status' links the 'Archive Documentation' activity with the attributes 'Cargo ID' and 'Documentation Status'.
- **bind Dispatch Cargo: Cargo ID**: The bind 'Dispatch Cargo: Cargo ID' specifies that the activity 'Dispatch Cargo' requires the attribute 'Cargo ID'.
- **bind Log Entry: Cargo ID**: The bind 'Log Entry: Cargo ID' specifies that the activity 'Log Entry' requires the attribute 'Cargo ID'.

## Constraints
- **Init[Log Entry] | |**: The 'Log Entry' must be the first activity to occur in the process.
- **Chain Precedence[Inspect Cargo, Log Entry] | | |**: The 'Inspect Cargo' activity can occur only if it is immediately preceded by a 'Log Entry' activity, with no other activities occurring in between.
- **Precedence[Document Cargo, Inspect Cargo] | | |**: The 'Document Cargo' activity is permitted to occur only if an 'Inspect Cargo' activity has occurred before it within the same process instance.
- **Absence[Document Cargo] | |**: The 'Document Cargo' activity must not occur in the process.
- **Precedence[Clear Cargo, Scan Cargo] | | |**: The 'Clear Cargo' activity is permitted to occur only if a 'Scan Cargo' activity has occurred before it within the same process instance.
- **Chain Succession[Hold Cargo, Report Findings] | | |**: Whenever a 'Hold Cargo' activity occurs, it must be immediately followed by a 'Report Findings' activity, with no other events in between. Conversely, whenever a 'Report Findings' event occurs, it must be immediately preceded by a 'Hold Cargo' event, with no other events in between.
- **Chain Response[Report Findings, Notify Authorities] | | |0,1,h**: Whenever a 'Report Findings' activity occurs, it must be immediately followed by a 'Notify Authorities' activity in the next event position, with no other events in between. This immediate succession must occur within 1 hour.
- **Response[Clear Cargo, Release Cargo] | | |**: If a 'Clear Cargo' activity occurs, then a 'Release Cargo' activity must eventually occur after the 'Clear Cargo' event at some point in the same process instance. There is no requirement on how soon or what events may occur in between.
- **Existence[Release Cargo] | |**: The 'Release Cargo' activity must occur at least once in the process.
- **Chain Response[Release Cargo, Archive Documentation] | | |0,2,h**: Whenever a 'Release Cargo' activity occurs, it must be immediately followed by an 'Archive Documentation' activity in the next event position, with no other events in between. This immediate succession must occur within 2 hours.
- **Response[Release Cargo, Dispatch Cargo] | | |**: If a 'Release Cargo' activity occurs, then a 'Dispatch Cargo' activity must eventually occur after the 'Release Cargo' event at some point in the same process instance. There is no requirement on how soon or what events may occur in between.
- **End[Dispatch Cargo] | |**: The 'Dispatch Cargo' must be the last activity to occur in the process.
- **Existence2[Clear Cargo] | |**: The 'Clear Cargo' activity must occur at least 2 times in the process.
- **Co-Existence[Scan Cargo, Inspect Cargo] | | |**: If 'Scan Cargo' activity occurs, then 'Inspect Cargo' must also occur in the same process instance, and vice-versa.
- **Precedence[Release Cargo, Notify Authorities] | | |**: The 'Release Cargo' activity is permitted to occur only if a 'Notify Authorities' activity has occurred before it within the same process instance.


## Interleaved Description
The MP-Declare process model for the cargo handling process is described as follows:

### **Trace-Related Constraints**

#### **Init Constraints**  
The process begins with the activity 'Log Entry,' which involves recording the initial entry of the cargo into the system. This activity establishes the foundational context for the process, ensuring that every cargo item is properly registered and tracked from the outset.

#### **End Constraints**  
The process concludes with the activity 'Dispatch Cargo,' which includes organizing and sending the cargo to its final destination. This activity must be the last to occur in the process, ensuring a coherent and structured conclusion to the cargo handling workflow.

---

### **Frequency Constraints**

#### **Existence Constraints**  
1. The 'Release Cargo' activity must occur at least once in the process. This ensures that the cargo is approved and released for further handling or dispatch, adding depth and reliability to the process.  
2. The 'Clear Cargo' activity must occur at least twice in the process. This repetition ensures that the cargo undergoes thorough approval checks, reinforcing the integrity and safety of the process.

#### **Absence Constraints**  
The 'Document Cargo' activity must not occur in the process. This exclusion highlights the intentional omission of this activity, ensuring that the process integrity is maintained by avoiding unnecessary or conflicting documentation steps.

---

### **Flexible Ordering Constraints**

#### **Precedence Constraints**  
1. The activity 'Inspect Cargo' is permitted to occur only if a 'Log Entry' activity has occurred before it. This ensures that the cargo inspection is conducted only after the cargo has been properly registered in the system, maintaining a logical sequence in the process.  
2. The activity 'Document Cargo' is permitted to occur only if an 'Inspect Cargo' activity has occurred before it. This ensures that documentation, if it were to occur, would be based on the results of a prior inspection.  
3. The activity 'Clear Cargo' is permitted to occur only if a 'Scan Cargo' activity has occurred before it. This ensures that the cargo is approved for further handling only after its weight and other characteristics have been determined through scanning.  
4. The activity 'Release Cargo' is permitted to occur only if a 'Notify Authorities' activity has occurred before it. This ensures that the cargo is released only after relevant authorities have been informed of any findings or issues.

#### **Response Constraints**  
1. If a 'Clear Cargo' activity occurs, then a 'Release Cargo' activity must eventually occur after the 'Clear Cargo' event at some point in the same process instance. This ensures that the approval of the cargo is followed by its release, maintaining a cohesive flow in the process.  
2. If a 'Release Cargo' activity occurs, then a 'Dispatch Cargo' activity must eventually occur after the 'Release Cargo' event at some point in the same process instance. This ensures that the release of the cargo is followed by its dispatch, completing the process flow.

#### **Succession Constraints**  
Whenever a 'Hold Cargo' activity occurs, it must be immediately followed by a 'Report Findings' activity, with no other events in between. Conversely, whenever a 'Report Findings' event occurs, it must be immediately preceded by a 'Hold Cargo' event, with no other events in between. This tightly coupled sequence ensures that any cargo placed on hold is promptly followed by a report of the findings, maintaining a logical and efficient progression in the process.

---

### **Immediate Ordering Constraints**

#### **Chain Precedence Constraints**  
The 'Inspect Cargo' activity can occur only if it is immediately preceded by a 'Log Entry' activity, with no other activities occurring in between. This immediate dependency ensures that the inspection directly follows the cargo's registration, making the sequence explicit and precise.

#### **Chain Response Constraints**  
1. Whenever a 'Report Findings' activity occurs, it must be immediately followed by a 'Notify Authorities' activity in the next event position, with no other events in between. This immediate succession must occur within 1 hour, ensuring a direct cause-and-effect relationship where findings are promptly communicated to the authorities.  
2. Whenever a 'Release Cargo' activity occurs, it must be immediately followed by an 'Archive Documentation' activity in the next event position, with no other events in between. This immediate succession must occur within 2 hours, ensuring that the release of the cargo is promptly followed by the archiving of related documentation.

#### **Chain Succession Constraints**  
Whenever a 'Hold Cargo' activity occurs, it must be immediately followed by a 'Report Findings' activity, with no other events in between. This tightly coupled sequence ensures that the process of holding cargo and reporting findings occurs in immediate succession, leaving no room for delays or intervening activities.

---

### **Mutual Dependency Constraints**

#### **Co-Existence Constraints**  
If a 'Scan Cargo' activity occurs, then an 'Inspect Cargo' activity must also occur in the same process instance, and vice-versa. This mutual dependency ensures that both scanning and inspection are integral parts of the process, reinforcing the thoroughness and reliability of the cargo handling workflow.

---

### **Conclusion**  
The MP-Declare process model for cargo handling ensures a structured and coherent flow of activities, beginning with the 'Log Entry' and concluding with the 'Dispatch Cargo.' The constraints enforce logical dependencies, mutual inclusions, and exclusions, ensuring the integrity, efficiency, and reliability of the process.